// Copyright 2012 Yuku Takahashi <taka84u9@gmail.com>.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

var vm     = require('vm'),
    fs     = require('fs'),
    log    = require('util').log;

var DEBUG = true;

var ASSETS_JS_DIR = 'app/assets/javascripts/';
var COFFEE_ENABLE = false;

var regexps = {
  js: {
    req_cmd: RegExp('//= require [^\n]+', 'g'),
    req_file: RegExp('^//= require (.+)$')
  }
}

try {
  var coffee = require('coffee-script');
  regexps.coffee = {
    req_cmd: RegExp('#= require [^\n]+', 'g'),
    req_file: RegExp('^#= require (.+)$')
  };
  COFFEE_ENABLE = true;
} catch (e) { }


exports.load = function(file) {
  var response = {},
      loaded = [];

  var exec_script = function(code, type, opt_filename) {
    if (type === 'coffee') { code = coffee.compile(code); }
    vm.runInNewContext(code, response, opt_filename);
  };

  var load_script = function(req) {
    var path, type, code, match;

    if (loaded.some(function(name) { return name === req; })) {
      return;
    } else {
      loaded.push(req);
    }

    path = ASSETS_JS_DIR + req + '.js';
    type;

    try {
      if (!fs.statSync(path).isFile()) { throw ''; }
      type = 'js'
    } catch (e) {
      if (COFFEE_ENABLE) {
        path += '.coffee';
        type = 'coffee';
        try {
          if (!fs.statSync(path).isFile()) { throw ''; }
        } catch (e) {
          throw new Error("no such file '" + ASSETS_JS_DIR + relative_path + ".js(.coffee)'");
        }
      } else {
        throw new Error("no such file '" + ASSETS_JS_DIR + relative_path + ".js'");
      }
    }

    code = fs.readFileSync(path, 'utf8');

    if (match = code.match(regexps[type].req_cmd)) {
      for (i = 0; i < match.length; i++) {
        load_script(match[i].match(regexps[type].req_file)[1]);
      }
    }
    
    if (DEBUG) { log('require ' + req); }

    exec_script(code, type, path);

    return true;
  };

  load_script(file);

  return response;
};
